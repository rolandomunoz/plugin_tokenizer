procedure tg.duplicate_tier: .tier_number, .tier_name$
    .position = .tier_number
    Duplicate tier: .tier_number, .position, .tier_name$
    .position_input = .tier_number + 1
    .position_output = .position
endproc

procedure tg.get_tier_class: .tier_name$
    #Returns "interval" or "point"
    @tg.get_tier_number: .tier_name$
    if tg.get_tier_number.return
        .is_interval = Is interval tier: get_tier_number.return
        if .is_interval
            .return$ = "interval"
        else
            .return$ = "point"
        endif
    else
        exitScript: "The tier ''.tier_name$'' could not be found"
    endif
endproc

procedure tg.get_tier_number: .tier_name$
    .return = 0
    .nTiers = Get number of tiers
    .tier = 1
    repeat
        @tg.get_tier_name: .tier
        if .tier_name$ == tg.get_tier_name.return$
            .return = .tier
            .tier = .nTiers
        endif
        .tier += 1
    until .tier > .nTiers
endproc

procedure tg.get_tier_name: .tier_number
    .return$ = Get tier name: .tier_number
endproc

procedure tg.ask_tier_name: .tier_name$
    beginPause: "Tier number"
        natural: "Tier '.tier_name$' position", 1
    .clicked = endPause: "Continue", "Quit", 1
    if .clicked = 2
        exitScript()
    elsif .clicked = 1
        .return = tier_'.tier_name$'_position
    endif
endproc
